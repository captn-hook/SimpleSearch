[{"id":"structure_data","user_id":"de3dac97-6946-493f-ab49-130f8de93137","name":"Structure Data","content":"\"\"\"\ntitle: Structure Data\nauthor: Tristan Hook\nauthor_url: https://captn-hook.github.io/\ngit_url: https://github.com/captn-hook/SimpleSearch\ndescription: This tool uses ollama to structure data in a specific format.\nrequired_open_webui_version: 0.4.0\nrequirements: ollama\nversion: 0.4.0\nlicence: MIT\n\"\"\"\n\nimport os\nimport requests\nfrom datetime import datetime\nfrom pydantic import BaseModel, Field\n\nfrom ollama import chat\n\n\n# Test Template, need to figure out how to retrieve a template\nclass Country(BaseModel):\n    name: str\n    capital: str\n    languages: list[str]\n\n\nclass Form(BaseModel):\n    name: str\n    data: dict\n\n\nclass Tools:\n    def __init__(self):\n        # Create the client instance\n        # self.client = ollama.Client()\n        pass\n\n    class UserValves(BaseModel):\n        structure_template: str = Field(\n            \"Form\", description=\"The template used to structure the data: Country, Form\"\n        )\n\n    # Add your custom tools using pure Python code here, make sure to add type hints and descriptions\n    async def structure_data(\n        self,\n        data: str,\n        __event_emitter__: str = \"\",\n        __event_call__: str = \"\",\n        __user__: dict = {},\n        __metadata__: dict = {},\n        __messages__: list = [],\n        __files__: list = [],\n        __model__: str = \"\",\n    ) -> dict:\n        \"\"\"\n        Get a response in a structured format.\n        \"\"\"\n\n        format = __user__[\"valves\"][\"structure_template\"]\n\n        if format == \"Country\":\n            template = Country\n        elif format == \"Form\":\n            template = Form\n\n        else:\n            return {\"error\": \"Invalid template\"}\n\n        response = chat(\n            messages=[\n                {\n                    \"role\": \"user\",\n                    \"content\": data,\n                },\n            ],\n            model=__model__,\n            format=template.model_json_schema(),\n        )\n\n        res = template.model_validate_json(response.message.content)\n\n        return res\n","specs":[{"name":"structure_data","description":"","parameters":{"properties":{"data":{"type":"string"}},"required":["data"],"type":"object"}}],"meta":{"description":"Get a response in a structured format.","manifest":{"title":"Structure Data","author":"Tristan Hook","author_url":"https://captn-hook.github.io/","git_url":"https://github.com/captn-hook/SimpleSearch","description":"This tool uses ollama to structure data in a specific format.","required_open_webui_version":"0.4.0","requirements":"ollama","version":"0.4.0","licence":"MIT"}},"access_control":{},"updated_at":1746382559,"created_at":1746382559}]